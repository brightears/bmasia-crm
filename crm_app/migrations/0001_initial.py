# Generated by Django 5.2.2 on 2025-06-07 13:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('Sales', 'Sales'), ('Finance', 'Finance'), ('Tech', 'Tech Support'), ('Music', 'Music Design'), ('Admin', 'Admin')], default='Sales', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('department', models.CharField(blank=True, max_length=50)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('zone', models.CharField(blank=True, db_index=True, max_length=100)),
                ('current_plan', models.CharField(blank=True, max_length=100)),
                ('website', models.URLField(blank=True)),
                ('industry', models.CharField(blank=True, choices=[('Technology', 'Technology'), ('Finance', 'Finance'), ('Healthcare', 'Healthcare'), ('Education', 'Education'), ('Retail', 'Retail'), ('Manufacturing', 'Manufacturing'), ('Services', 'Services'), ('Other', 'Other')], max_length=50)),
                ('company_size', models.CharField(blank=True, choices=[('Startup', 'Startup (1-10 employees)'), ('Small', 'Small (11-50 employees)'), ('Medium', 'Medium (51-200 employees)'), ('Large', 'Large (201-1000 employees)'), ('Enterprise', 'Enterprise (1000+ employees)')], max_length=20)),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('address_line1', models.CharField(blank=True, max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name', 'zone'], name='crm_app_com_name_38f295_idx'), models.Index(fields=['industry', 'company_size'], name='crm_app_com_industr_ad13c1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('title', models.CharField(blank=True, max_length=100)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('contact_type', models.CharField(choices=[('Primary', 'Primary Contact'), ('Technical', 'Technical Contact'), ('Billing', 'Billing Contact'), ('Decision Maker', 'Decision Maker'), ('Other', 'Other')], default='Other', max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='crm_app.company')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_number', models.CharField(max_length=50, unique=True)),
                ('contract_type', models.CharField(choices=[('Annual', 'Annual Subscription'), ('Monthly', 'Monthly Subscription'), ('One-time', 'One-time Service'), ('Custom', 'Custom Agreement')], default='Annual', max_length=20)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Sent', 'Sent for Signature'), ('Signed', 'Signed'), ('Active', 'Active'), ('Expired', 'Expired'), ('Terminated', 'Terminated'), ('Renewed', 'Renewed')], default='Draft', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('auto_renew', models.BooleanField(default=False)),
                ('renewal_period_months', models.IntegerField(default=12)),
                ('is_active', models.BooleanField(default=True)),
                ('payment_terms', models.CharField(blank=True, max_length=100)),
                ('billing_frequency', models.CharField(default='Annual', max_length=20)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('renewal_notice_sent', models.BooleanField(default=False)),
                ('renewal_notice_date', models.DateField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='crm_app.company')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Sent', 'Sent'), ('Paid', 'Paid'), ('Overdue', 'Overdue'), ('Cancelled', 'Cancelled'), ('Refunded', 'Refunded')], default='Draft', max_length=20)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('first_reminder_sent', models.BooleanField(default=False)),
                ('second_reminder_sent', models.BooleanField(default=False)),
                ('final_notice_sent', models.BooleanField(default=False)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='crm_app.contract')),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note_type', models.CharField(choices=[('General', 'General'), ('Meeting', 'Meeting'), ('Call', 'Phone Call'), ('Email', 'Email'), ('Task', 'Task'), ('Follow-up', 'Follow-up'), ('Issue', 'Issue/Problem'), ('Resolution', 'Resolution')], default='General', max_length=20)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], default='Medium', max_length=10)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField()),
                ('is_private', models.BooleanField(default=False)),
                ('follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_notes', to='crm_app.company')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_notes', to='crm_app.contact')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('stage', models.CharField(choices=[('Lead', 'Lead'), ('Contacted', 'Contacted'), ('Qualified', 'Qualified'), ('Proposal', 'Proposal Sent'), ('Negotiation', 'Negotiation'), ('Closed Won', 'Closed - Won'), ('Closed Lost', 'Closed - Lost')], default='Lead', max_length=50)),
                ('expected_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('probability', models.IntegerField(default=0, help_text='Probability of closing (0-100%)')),
                ('lead_source', models.CharField(blank=True, choices=[('Website', 'Website'), ('Referral', 'Referral'), ('Cold Call', 'Cold Call'), ('Email Campaign', 'Email Campaign'), ('Social Media', 'Social Media'), ('Trade Show', 'Trade Show'), ('Partner', 'Partner'), ('Other', 'Other')], max_length=50)),
                ('contact_method', models.CharField(blank=True, choices=[('Email', 'Email'), ('Phone', 'Phone Call'), ('Meeting', 'In-Person Meeting'), ('Video Call', 'Video Call'), ('Demo', 'Product Demo'), ('Presentation', 'Presentation')], max_length=20)),
                ('last_contact_date', models.DateField(blank=True, null=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('expected_close_date', models.DateField(blank=True, null=True)),
                ('actual_close_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('competitors', models.CharField(blank=True, help_text='Comma-separated competitor names', max_length=500)),
                ('pain_points', models.TextField(blank=True)),
                ('decision_criteria', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunities', to='crm_app.company')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opportunities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-expected_value', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='opportunity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contracts', to='crm_app.opportunity'),
        ),
        migrations.CreateModel(
            name='OpportunityActivity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('Call', 'Phone Call'), ('Email', 'Email'), ('Meeting', 'Meeting'), ('Demo', 'Product Demo'), ('Proposal', 'Proposal Sent'), ('Follow-up', 'Follow-up'), ('Quote', 'Quote Sent'), ('Contract', 'Contract Sent'), ('Other', 'Other')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('outcome', models.TextField(blank=True)),
                ('next_steps', models.TextField(blank=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_app.contact')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm_app.opportunity')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Opportunity Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('department', models.CharField(blank=True, choices=[('Sales', 'Sales'), ('Finance', 'Finance'), ('Tech', 'Tech Support'), ('Music', 'Music Design'), ('Admin', 'Admin')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Urgent', 'Urgent')], default='Medium', max_length=10)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('On Hold', 'On Hold')], default='Pending', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='crm_app.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', 'due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('CREATE', 'Created'), ('UPDATE', 'Updated'), ('DELETE', 'Deleted'), ('VIEW', 'Viewed'), ('EXPORT', 'Exported'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout')], max_length=20)),
                ('model_name', models.CharField(max_length=50)),
                ('record_id', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('additional_data', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='crm_app_aud_user_id_9f4615_idx'), models.Index(fields=['model_name', 'record_id'], name='crm_app_aud_model_n_3c98bb_idx'), models.Index(fields=['action', '-timestamp'], name='crm_app_aud_action_18acb1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['company', 'is_primary'], name='crm_app_con_company_10d62d_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['email'], name='crm_app_con_email_fffab2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('company', 'email')},
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['contract', 'status'], name='crm_app_inv_contrac_74fc4e_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date', 'status'], name='crm_app_inv_due_dat_c49e12_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['issue_date'], name='crm_app_inv_issue_d_40be57_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['company', '-created_at'], name='crm_app_not_company_cc74a4_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['note_type', 'priority'], name='crm_app_not_note_ty_48be3b_idx'),
        ),
        migrations.AddIndex(
            model_name='opportunity',
            index=models.Index(fields=['stage', 'owner'], name='crm_app_opp_stage_f9435a_idx'),
        ),
        migrations.AddIndex(
            model_name='opportunity',
            index=models.Index(fields=['expected_close_date', 'stage'], name='crm_app_opp_expecte_f06004_idx'),
        ),
        migrations.AddIndex(
            model_name='opportunity',
            index=models.Index(fields=['company', 'is_active'], name='crm_app_opp_company_2ef470_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['company', 'is_active'], name='crm_app_con_company_39c1ca_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['end_date', 'auto_renew'], name='crm_app_con_end_dat_4123b2_idx'),
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['status', 'end_date'], name='crm_app_con_status_116d00_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['assigned_to', 'status'], name='crm_app_tas_assigne_2d9fce_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['company', 'due_date'], name='crm_app_tas_company_382ff5_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['priority', 'status'], name='crm_app_tas_priorit_fa4934_idx'),
        ),
    ]
